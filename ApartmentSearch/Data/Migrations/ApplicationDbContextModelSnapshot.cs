// <auto-generated />
using System;
using ApartmentSearch.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApartmentSearch.Data.Migrations
{
    [DbContext(typeof(DesMoinesContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApartmentSearch.Models.ApartmentComplexAddresses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(50);

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("ApartmentComplexAddresses");
                });

            modelBuilder.Entity("ApartmentSearch.Models.ApartmentComplexContacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("ApartmentComplexContacts");
                });

            modelBuilder.Entity("ApartmentSearch.Models.ApartmentComplexFees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AdministrativeFee")
                        .HasColumnType("money");

                    b.Property<decimal?>("ApplicationFee")
                        .HasColumnType("money");

                    b.Property<decimal?>("GarageFee")
                        .HasColumnType("money");

                    b.Property<decimal?>("PetFee")
                        .HasColumnType("money");

                    b.Property<decimal?>("PetRent")
                        .HasColumnType("money");

                    b.Property<decimal?>("SecurityDeposit")
                        .HasColumnType("money");

                    b.Property<int?>("UtilityId");

                    b.HasKey("Id");

                    b.HasIndex("UtilityId");

                    b.ToTable("ApartmentComplexFees");
                });

            modelBuilder.Entity("ApartmentSearch.Models.ApartmentComplexUtilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cable")
                        .HasColumnType("money");

                    b.Property<decimal?>("Electricity")
                        .HasColumnType("money");

                    b.Property<decimal?>("Garbage")
                        .HasColumnType("money");

                    b.Property<decimal?>("Gas")
                        .HasColumnType("money");

                    b.Property<decimal?>("Internet")
                        .HasColumnType("money");

                    b.Property<decimal?>("Water")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("ApartmentComplexUtilities");
                });

            modelBuilder.Entity("ApartmentSearch.Models.ApartmentComplexes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<int>("ContactId");

                    b.Property<int>("FeesId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("Visited");

                    b.Property<string>("Website")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ContactId");

                    b.HasIndex("FeesId");

                    b.ToTable("ApartmentComplexes");
                });

            modelBuilder.Entity("ApartmentSearch.Models.ApartmentFloorPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Baths");

                    b.Property<int>("Beds");

                    b.Property<bool>("HasAttachedGarage");

                    b.Property<bool>("HasBalcony");

                    b.Property<bool>("HasIceMaker");

                    b.Property<bool>("HasWalkInCloset");

                    b.Property<bool>("LooksUpdated");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("RatingId");

                    b.Property<decimal>("Rent")
                        .HasColumnType("money");

                    b.Property<int>("SquareFootage");

                    b.Property<int>("StyleId");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.HasIndex("StyleId");

                    b.ToTable("ApartmentFloorPlan");
                });

            modelBuilder.Entity("ApartmentSearch.Models.ApartmentRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<int>("Stars");

                    b.HasKey("Id");

                    b.ToTable("ApartmentRating");
                });

            modelBuilder.Entity("ApartmentSearch.Models.ApartmentStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ApartmentStyle");
                });

            modelBuilder.Entity("ApartmentSearch.Models.ApartmentComplexFees", b =>
                {
                    b.HasOne("ApartmentSearch.Models.ApartmentComplexUtilities", "Utility")
                        .WithMany("ApartmentComplexFees")
                        .HasForeignKey("UtilityId")
                        .HasConstraintName("FK_ApartmentComplexFees_ApartmentComplexUtilities")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ApartmentSearch.Models.ApartmentComplexes", b =>
                {
                    b.HasOne("ApartmentSearch.Models.ApartmentComplexAddresses", "Address")
                        .WithMany("ApartmentComplexes")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK_ApartmentComplexes_ApartmentComplexAddresses")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ApartmentSearch.Models.ApartmentComplexContacts", "Contact")
                        .WithMany("ApartmentComplexes")
                        .HasForeignKey("ContactId")
                        .HasConstraintName("FK_ApartmentComplexes_ApartmentComplexContacts")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ApartmentSearch.Models.ApartmentComplexFees", "Fees")
                        .WithMany("ApartmentComplexes")
                        .HasForeignKey("FeesId")
                        .HasConstraintName("FK_ApartmentComplexes_ApartmentComplexFees")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ApartmentSearch.Models.ApartmentFloorPlan", b =>
                {
                    b.HasOne("ApartmentSearch.Models.ApartmentRating", "Rating")
                        .WithMany("ApartmentFloorPlan")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ApartmentSearch.Models.ApartmentStyle", "Style")
                        .WithMany("ApartmentFloorPlan")
                        .HasForeignKey("StyleId")
                        .HasConstraintName("FK_ApartmentFloorPlan_ApartmentStyle");
                });
#pragma warning restore 612, 618
        }
    }
}
